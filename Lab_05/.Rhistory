#import all the toplot files and puts them in a list "DBCC038"
#can call a particular toplot like "DBCC038$mel_1" or
for (i in 1:length(lst_file)) {
DBCC041_names[i] <- gsub("DBCC041", "", gsub(pttern, "", lst_file[i]))
}
source('C:/Users/CarolusC/Desktop/Tcon_remap/norm_plots/make_avg_ref.R')
install.packages(zoo)
install.packages("zoo")
library(data.table)
x <- "primate"
mode(x)
class(x)
install.packages('dada2')
install.packages("BiocManager")
BiocManager::install("dada2")
library("dada2")
setwd("C:/Users/CarolusC/GoogleDrive/GSI/IB134LFall2024/Labs/Lab_04")
# Creates a list of sequence file paths
path <- "fastq"
list.files(path)
sequences <- sort(list.files(path, pattern=".fastq", full.names = TRUE))
# Extract sample names from the file names
sample.names <- sapply(strsplit(basename(sequences), ".fastq"), `[`, 1)
# Pre-assigns file names for our filtering output
filtered.seqs <- file.path(path, "filtered", paste0(sample.names, "_filt.fastq"))
names(filtered.seqs) <- sample.names
# Filter sequences and saves them to the pre-assigned file names
# Saves a summary table of the pre-and-post filtered reads to a table called out
out <- filterAndTrim(sequences, filtered.seqs,
maxN=0, maxEE=2, truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=2)
head(out
head(out)
head(out)
err_output <- learnErrors(filtered.seqs, multithread=FALSE)
plotErrors(err_output)
plotErrors(err_output, nominalQ = TRUE)
library("phyloseq")
install.packages("phyloseq")
library(phyloseq)
BiocManager::install("phyloseq")
library(phyloseq)
